date
Display or change the date.

Syntax
      date [option]... [+Format]
  
      date [option] [MMDDhhmm[[CC]YY][.ss]]
'date' with no arguments prints the current time and date, in the format of the %c directive (described below).

If given an argument that starts with a +, date prints the current time and date (or the time and date specified by the --date option, see below) in the format defined by that argument, which is the same as in the strftime function.

Except for directives, which start with %, characters in the format string are printed unchanged. The directives are described below.

Options:
  -d, --date=String         Display time described by String, instead of 'now'
                            this can be in almost any common format.  
                            It can contain month names, timezones, 'am' and 'pm',
                            'yesterday', 'ago', 'next', etc.

  -f, --file=DateFile       like --date once for each line of DateFile
                            If DateFile is '-', use standard input.  This is
                            useful when you have many dates to process, 
                            because the system overhead of starting up the
                            'date' executable many times can be considerable.

  -I, --iso-8601[=Timespec] Output an ISO 8601 compliant date/time string., '%Y-%m-%d'.
                            Timespec='date' (or missing) for date only,
                            'hours', 'minutes', or 'seconds' for date and
                            time to the indicated precision.
                            If showing any time terms, then include the time zone 
                            using the format '%z'.  If '--utc' is also specified, 
                            use '%Z' in place of '%z'.

  -r, --reference=File      Display the last modification time of File

  -R, --rfc-822             Output RFC-822 compliant date string
                            Example: Mon, 19 Nov 2012 12:44:56 -0600

  -s, --set=String          Set time described by String (see -d above)

  -u, --utc, --universal    Print or set Coordinated Universal Time

      --help                Display this help and exit
      --version             output version information and exit
Format controls the output as follows. The only valid option for the second form (MMDDhhmm[[CC]YY][.ss])will specify Coordinated Universal Time.

Interpreted sequences are:

     Date:
        D    Date in mm/dd/yy format (06/24/13)
        x    Date in standard format for locale (09/24/13 for English-US)
        
     Year:
        C   Century (20 for 2015)
        Y   Year in 4-digit format (2015)
        y   Year in 2-digit format (14)
        G   Same as 'Y'
        g   Same as 'y'
        
     Month: 
        b   Month name - abbreviated (Jan)
        B   Month name - full (January)
        h   Same as 'b'
        m   Month number (09)
        
     Week:
        W  Week of the year (00-52)

        V  Week of the year (01-53)
           If the week containing January 1 has four or
           more days in the new year, then it is considered week 1;
           otherwise, it is week 53 of the previous year, and the next week
           is week 1. Similar to ISO 8601 (but not 100% compliant.)

        U  Same as 'W'
        
     Day:
        a   Day of the week - abbreviated name (Mon)
        A   Day of the week - full name (Monday)
        u   Day of the week - number (Monday = 1)
        d   Day of the month - 2 digits (05)
        e   Day of the month - digit preceded by a space ( 5)
        j   Day of the year - (1-366)
        w   Same as 'u'
        
     Time:
        p   AM or PM
        r   Time in 12-hour format (09:15:36 AM)
        R   Time in 24-hour format - no seconds (17:45)
        T   Time in 24 hour format (17:45:52)
        X   Same as 'T'
        Z   Time offset from UTC (-07) This generally consists of Time Zone+DST
        
     Hour: 
        H   Hour in 24-hour format (17)
        I   Hour in 12 hour format (05)
        k   Same as 'H'
        l   Same as 'I' (Upper-case I = Lower-case L)
        
     Minutes & Seconds:
        M   Minutes (35)
        S   Seconds (05)
        s   Seconds elapsed since January 1, 1970 00:00:00 GMT (Unix time)
Here are the same format codes in alphabetical order:

  %%   a literal %
  %a   locale's abbreviated weekday name (Sun..Sat)
  %A   locale's full weekday name, variable length (Sunday..Saturday)
  %b   locale's abbreviated month name (Jan..Dec)
  %B   locale's full month name, variable length (January..December)
  %c   locale's date and time (Sat Nov 04 12:02:33 EST 1989)
  %d   day of month (01..31)
  %D   date (mm/dd/yy)
  %e   day of month, blank padded ( 1..31)
  %h   same as %b, locale's abbreviated month name (Jan..Dec)
  %H   hour :24 hour(00..23)
  %I   hour :12 hour(01..12)
  %j   day of year (001..366)
  %k   hour :24 hour(00..23)
  %l   hour :12 hour(01..12)
  %m   month (01..12)
  %M   minute (00..59)
  %n   a newline
  %p   locale's AM or PM
  %r   Time, 12-hour (hh:mm:ss [AP]M)
  %s   Seconds since 1970-01-01 00:00:00,  (a GNU extension)
       Note that this value is defined by the localtime system
       call.  It isn't changed by the '--date' option.
  %S   second (00..60)
  %t   a horizontal tab
  %T   Time, 24-hour (hh:mm:ss)
  %U   Week number of year with Sunday as first day of week (00..53)
  %V   Week number of year with Monday as first day of week (01..53)
       If the week containing January 1 has four or
       more days in the new year, then it is considered week 1;
       otherwise, it is week 53 of the previous year, and the next week
       is week 1. Similar to ISO 8601 (but not 100% compliant.)

  %w   day of week (0..6);  0 represents Sunday
  %W   week number of year with Monday as first day of week (00..53)
  %x   locale's date representation (mm/dd/yy)
  %X   locale's time representation (%H:%M:%S)
  %y   last two digits of year (00..99)
  %Y   year (1970...)
  %z   RFC-822 style numeric timezone (-0500) (a nonstandard extension)
       This value reflects the current time zone.
       Is not changed  by the --date option.
  %Z   Time offset from UTC (-07) This generally consists of Time Zone+DST
       Is not changed by the --date option.
By default, date pads numeric fields with zeroes. GNU date recognizes the following modifiers between % and a numeric directive.

- (hyphen) do not pad the field; useful if the output is intended for human consumption.
_ (underscore) pad the field with spaces; useful if you need a fixed number of characters in the output, but zeroes are too distracting.

The - and _ are GNU extensions. Here is an example illustrating the differences:

     date +%d/%m -d "Feb 1"
     => 01/02
     date +%-d/%-m -d "Feb 1"
     => 1/2
     date +%_d/%_m -d "Feb 1"
     =>  1/ 2
Setting the time
If given an argument that does not start with +, date sets the system clock to the time and date specified by that argument (as described below). You must have appropriate privileges to set the system clock. The --date and --set options can not be used with such an argument. The --universal option can be used with such an argument to indicate that the specified time and date are relative to Coordinated Universal Time rather than to the local time zone.

The argument must consist entirely of digits, which have the following meaning:

 MM     month
 DD     day within month
 HH     hour
 MM     minute
 CC     first two digits of year (optional)
 YY     last two digits of year (optional)
 SS     second (optional) 
 
 The '--set' option also sets the system clock; see the examples below.

